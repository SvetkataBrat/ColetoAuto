@page "/carviews/update/{carId:int}"
@using Microsoft.Extensions.Logging;
@using BussinessLayer;
@using ServiceLayer2;
@inject CarManager carManager;
@inject ModelManager modelManager;
@inject ErrorModel errorModel;
@inject NavigationManager navigationManager;

<h3>Update</h3>

<EditForm EditContext="@editContext" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <label for="Price">Price: </label>
    <InputNumber @bind-Value="model.Price"></InputNumber>

    <label for="Mileage">Mileage: </label>
    <InputNumber @bind-Value="model.Mileage"></InputNumber>

    <label for="Mileage">Mileage: </label>
    <InputNumber @bind-Value="model.Mileage"></InputNumber>

    <label for="Mileage">Description: </label>
    <InputNumber @bind-Value="model.Description"></InputNumber>

    <label for="HorsePower">HorsePower: </label>
    <InputNumber @bind-Value="model.HorsePower"></InputNumber>


    <InputSelect class="form-select" @bind-Value="model.ModelId">
        @foreach (Model model in modelManager.ReadAllAsync().Result)
        {
            <option value="@model.Id">@model.Name</option>
        }
    </InputSelect>

</EditForm>

<div>
    <a href="hobby/index">Back to List</a>
</div>

@code 
{
    private Car model;

    private EditContext editContext;

    [Parameter]
    public int carId { get; set; }

    [Parameter]
    public string Name { get; set; }

    protected override Task OnInitializedAsync()
    {
        model.Id = carId;
        editContext = new EditContext(model);

        return base.OnInitializedAsync();
    }

    private async Task HandleValidSubmit()
    {
        await carManager.UpdateAsync(model);
    }

}
